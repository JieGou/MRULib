<UserControl
    x:Class="MRULib.Controls.FileHyperlink"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hyperl="clr-namespace:MRULib.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <Grid>
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem
                    Command="{x:Static hyperl:FileHyperlink.CopyUri}"
                    CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                    Header="Copy Url to Clipboard" />

                <MenuItem
                    Command="{x:Static hyperl:FileHyperlink.NavigateToUri}"
                    CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                    Header="Open with Windows Application..." />

                <MenuItem
                    Command="{x:Static hyperl:FileHyperlink.OpenContainingFolder}"
                    CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                    Header="Open containing folder" />
            </ContextMenu>
        </Grid.ContextMenu>
        <TextBlock>
            <TextBlock.InputBindings>
                <KeyBinding
                    Key="C"
                    Command="{x:Static hyperl:FileHyperlink.CopyUri}"
                    CommandParameter="{Binding ElementName=PART_Hyperlink, Path=NavigateUri}"
                    Modifiers="Ctrl" />
            </TextBlock.InputBindings>
            <!--
                Relay NavigateUri dependency property to outside of FileHyperlink Control.
                Use this dp if you can offer a Uri compliant string that represents the target destination.
                "file:///c:\\" or "https://mysite.com"

                !!! A standard string object "c:\\" is not suitable for binding to NavigateUri !!!

                Use Command Binding for custom actions (eg.: open file in current application)
                when Hyplerink is clicked as this will overwrite the NavigateUri link.

                The Command and CommandParameter bindings are also relayed via additional DPs on this Control.
            -->
            <Hyperlink
                Name="PART_Hyperlink"
                Command="{Binding Path=NavigateUriCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=hyperl:FileHyperlink, AncestorLevel=1}}"
                CommandParameter="{Binding Path=NavigateUriCommandParameter, RelativeSource={RelativeSource FindAncestor, AncestorType=hyperl:FileHyperlink, AncestorLevel=1}}"
                NavigateUri="{Binding Path=NavigateUri, RelativeSource={RelativeSource FindAncestor, AncestorType=hyperl:FileHyperlink, AncestorLevel=1}}">
                <TextBlock Text="{Binding Path=Text, RelativeSource={RelativeSource FindAncestor, AncestorType=hyperl:FileHyperlink, AncestorLevel=1}}" />
            </Hyperlink>
        </TextBlock>
    </Grid>
</UserControl>
