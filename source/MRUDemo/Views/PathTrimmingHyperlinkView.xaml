<UserControl
    x:Class="MRU.Views.PathTrimmingHyperlinkView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <Grid
        xmlns:conv="clr-namespace:MRULib.Converters;assembly=MRULib"
        xmlns:ctrl="clr-namespace:MRULib.Controls;assembly=MRULib"
        xmlns:dat="clr-namespace:System.Windows.Data;assembly=PresentationFramework"
        xmlns:hyperl="clr-namespace:MRULib.Controls;assembly=MRULib"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase">
        <Grid.Resources>
            <CollectionViewSource
                x:Key="collViewEntries"
                IsLiveGroupingRequested="True"
                Source="{Binding MRUFileList.Entries}">
                <CollectionViewSource.SortDescriptions>
                    <!--  This will sort groups  -->
                    <scm:SortDescription Direction="Ascending" PropertyName="Value.GroupItem.Group" />

                    <!--  This will sort items  -->
                    <scm:SortDescription Direction="Ascending" PropertyName="Value.IsPinned" />
                    <scm:SortDescription Direction="Descending" PropertyName="Value.LastUpdate" />
                </CollectionViewSource.SortDescriptions>
                <CollectionViewSource.GroupDescriptions>
                    <dat:PropertyGroupDescription PropertyName="Value.GroupItem.Group" />
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>
            <!--  Use a proxy to bind items to root properties of this collection  -->
            <ctrl:BindingProxy x:Key="DataContextProxy" Data="{Binding MRUFileList}" />

            <ctrl:BindingProxy x:Key="AppDataContextProxy" Data="{Binding}" />

            <conv:IntToBoolConverter x:Key="IntToBoolConverter" />

            <!--  Make sure that an entry can either be pinned or unpinned via visibility in contextmenu  -->
            <conv:IntIsPinnedToVisibilityConverter x:Key="TrueIntIsPinnedToVisibilityConverter" ConvertZeroToVisible="True" />
            <conv:IntIsPinnedToVisibilityConverter x:Key="FalseIntIsPinnedToVisibilityConverter" ConvertZeroToVisible="False" />
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Margin="3">
                <TextBlock FontWeight="Bold" Text="Selected Item:" />
                <TextBlock Text="{Binding ElementName=list, Path=SelectedItem.Value.PathFileName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </TextBlock>
        </Grid>

        <ListView
            Name="list"
            Grid.Row="1"
            ItemsSource="{Binding Source={StaticResource collViewEntries}}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            SelectionMode="Single">
            <!--
                Use this for simplified testing with dark theme
                Background="Black"
                Foreground="White"
            -->
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <!--  ColumnDefinition Width="Auto"/  -->
                                    </Grid.ColumnDefinitions>

                                    <Grid
                                        Name="TextBlockGridWidth"
                                        Grid.Column="0"
                                        Margin="3,0">
                                        <!--
                                            NavigateUri="{Binding Value.PathfileNameUri}"
                                        -->
                                        <ctrl:PathTrimmingFileHyperlink
                                            DataContext="{Binding Value}"
                                            NavigateUri="{Binding Path=PathFileName}"
                                            NavigateUriCommand="{Binding Path=Data.NavigateUriCommand, Source={StaticResource AppDataContextProxy}}"
                                            NavigateUriCommandParameter="{Binding Path=PathFileName}"
                                            Text="{Binding PathFileName}">
                                            <ctrl:PathTrimmingFileHyperlink.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem
                                                        Command="{Binding Path=Data.MovePinnedMruItemUPCommand, Source={StaticResource AppDataContextProxy}}"
                                                        CommandParameter="{Binding}"
                                                        Header="Move Up" />
                                                    <MenuItem
                                                        Command="{Binding Path=Data.MovePinnedMruItemDownCommand, Source={StaticResource AppDataContextProxy}}"
                                                        CommandParameter="{Binding}"
                                                        Header="Move Down" />

                                                    <Separator />
                                                    <MenuItem
                                                        Command="{Binding Path=Data.PinItemCommand, Source={StaticResource AppDataContextProxy}}"
                                                        CommandParameter="{Binding}"
                                                        Header="Pin to this list"
                                                        Visibility="{Binding Path=IsPinned, Converter={StaticResource TrueIntIsPinnedToVisibilityConverter}}" />
                                                    <MenuItem
                                                        Command="{Binding Path=Data.UnPinItemCommand, Source={StaticResource AppDataContextProxy}}"
                                                        CommandParameter="{Binding}"
                                                        Header="Unpin from this list"
                                                        Visibility="{Binding Path=IsPinned, Converter={StaticResource FalseIntIsPinnedToVisibilityConverter}}" />

                                                    <MenuItem
                                                        Command="{Binding Path=Data.RemoveItemCommand, Source={StaticResource AppDataContextProxy}}"
                                                        CommandParameter="{Binding}"
                                                        Header="Remove from list" />

                                                    <Separator />
                                                    <MenuItem
                                                        Command="{x:Static hyperl:PathTrimmingFileHyperlink.CopyUri}"
                                                        CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                        Header="Copy Url to Clipboard" />

                                                    <MenuItem
                                                        Command="{x:Static hyperl:PathTrimmingFileHyperlink.NavigateToUri}"
                                                        CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                        Header="Open with Windows Application..." />

                                                    <MenuItem
                                                        Command="{x:Static hyperl:PathTrimmingFileHyperlink.OpenContainingFolder}"
                                                        CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                        Header="Open containing folder" />
                                                </ContextMenu>
                                            </ctrl:PathTrimmingFileHyperlink.ContextMenu>
                                            <ctrl:PathTrimmingFileHyperlink.ToolTip>
                                                <TextBlock>
                                                    <TextBlock Text="{Binding PathFileName}" /><LineBreak />
                                                    <TextBlock Text="{Binding LastUpdate}" /><LineBreak />
                                                    <TextBlock Text="{Binding IsPinned}" />
                                                </TextBlock>
                                            </ctrl:PathTrimmingFileHyperlink.ToolTip>
                                        </ctrl:PathTrimmingFileHyperlink>
                                    </Grid>

                                    <ctrl:CheckPin
                                        Name="checkPin"
                                        Grid.Column="1"
                                        Margin="0,0,12,0"
                                        HorizontalAlignment="Right"
                                        Command="{Binding Path=Data.ItemIsPinnedChanged, Source={StaticResource DataContextProxy}}"
                                        CommandParameter="{Binding Key}"
                                        IsChecked="{Binding Value.IsPinned, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IntToBoolConverter}}" />

                                    <!--  Visual Debugging for IsMouseOverListViewItem Dp  -->
                                    <!--
                                        CheckBox Grid.Column="2" IsEnabled="False"
                                        IsChecked="{Binding ElementName=checkPin, Path=IsMouseOverListViewItem, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                        /
                                    -->
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="checkPin" Property="IsMouseOverListViewItem" Value="True" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <!--
                                https://social.msdn.microsoft.com/Forums/en-US/d2eafb97-a655-4742-a1ab-deeb05fbe6bd/listview-specify-group-name?forum=wpf
                                https://msdn.microsoft.com/en-us/library/system.windows.data.collectionviewgroup_properties.aspx
                            -->
                            <TextBlock
                                Margin="0,6,0,0"
                                FontSize="14"
                                FontWeight="Bold"
                                Text="{Binding Items[0].Value.GroupItem.GroupName}" />
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
        </ListView>
    </Grid>
</UserControl>
